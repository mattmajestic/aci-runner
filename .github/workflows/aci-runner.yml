name: Build and Deploy GH Runner on Azure Container Apps

on:
  push:
    branches: [main]
    paths: 
      - Dockerfile
  workflow_dispatch:

env:
  IMAGE_NAME: aci-runner
  IMAGE_TAG: latest
  RUNNER_REPOSITORY_URL: https://github.com/mattmajestic/aci-runner
  RESOURCE_GROUP: azure-vm
  LOCATION: eastus
  ACR_NAME: majesticcoding.azurecr.io
  CONTAINERAPPS_ENVIRONMENT: managedEnvironment-azurevm-b1d5 # Replace with your Container Apps environment name
  CONTAINER_APP_NAME: gh-runner # Replace with your Container App name
  JOB_NAME: gh-runner-job-${{ github.run_number }} # Job name for Azure Container Apps
  REPO_OWNER: mattmajestic # Replace with your GitHub username or organization
  REPO_NAME: aci-runner # Replace with your GitHub repository name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Generate GitHub Runner Registration Token
        id: generate-token
        run: |
          TOKEN=$(curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
          -H "Accept: application/vnd.github+json" \
          "https://api.github.com/repos/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/actions/runners/registration-token" | jq -r .token)
          echo "::set-output name=token::$TOKEN"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Build and Push to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ env.ACR_NAME }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
          docker build . -f Dockerfile -t ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --environment ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
            --registry-external ${{ env.ACR_NAME }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --set-environment-variables RUNNER_REPOSITORY_URL="${{ env.RUNNER_REPOSITORY_URL }}" RUNNER_TOKEN="${{ steps.generate-token.outputs.token }}"

      # Additional step for deploying a job with specific parameters
      - name: Deploy Job to Azure Container Apps
        run: |
          az containerapp job create \
            -n ${{ env.JOB_NAME }} \
            -g ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
            --trigger-type Event \
            --replica-timeout 1800 \
            --replica-retry-limit 0 \
            --replica-completion-count 1 \
            --parallelism 1 \
            --image ${{ env.ACR_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --min-executions 0 \
            --max-executions 10 \
            --polling-interval 30 \
            --scale-rule-name "github-runner" \
            --scale-rule-type "github-runner" \
            --scale-rule-metadata "githubAPIURL=https://api.github.com" "owner=${{ env.REPO_OWNER }}" "runnerScope=repo" "repos=${{ env.REPO_NAME }}" "targetWorkflowQueueLength=1" \
            --scale-rule-auth "personalAccessToken=personal-access-token" \
            --cpu "2.0" \
            --memory "4Gi" \
            --secrets "personal-access-token=${{ secrets.GH_PAT }}" \
            --env-vars "GITHUB_PAT=secretref:personal-access-token" "REPO_URL=https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" "REGISTRATION_TOKEN_API_URL=https://api.github.com/repos/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/actions/runners/registration-token" \
            --registry-server ${{ env.ACR_NAME }}.azurecr.io
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
